# Model aleta and chamfer EL (end left)
vDir=(stackPendHeadWall[1]-stackPendHeadWall[0]).normalize()
ptELwingwall=stackPendHeadWall[0]+struct.getSkewWallTh()*vDir
if 'deltaZ_top_aletaEL' in locals():
    ptELwingwall=ptELwingwall+deltaZ_top_aletaEL*Vector(0,0,1)
v=struct.getVectDorsalView()
vDirLn=gu.getRotatedVector(v,vZpos,angELww)
vDirTr=vDirLn.cross(vZneg)
wingWallEL=underpass.Wingwall(placementPoint=ptELwingwall,
                              foundLevel=Z_ELww-vTransfCoord.z,
                              wallLenght=lenELww,
                              wallSlope=wallSlopeELww,
                              wallTopWidth=ELww_data['wallTopWidth'],
                              backFaceSlope=ELww_data['backFaceSlope'],
                              frontFaceSlope=ELww_data['frontFaceSlope'],
                              vDirTr=vDirTr,
                              vDirLn=vDirLn,
                              dispLn=dispLnEL,
)
wwEL,stackPntWwEL=wingWallEL.genWingwall()
footEL,stackPntFootEL=wingWallEL.genWingwallFoundation(
    footsLength=[lenELww],
    footsHeight=[ELww_data['footHeight']],
    footsWidth=[ELww_data['footWidth']],
    footsToeWidth=[ELww_data['footToeWidth']])
chamferEL=dt.draw_triang_prism(
    p1=ptELwingwall,
    p2=ptELwingwall-struct.getSkewWallTh()*vDir,
    p3=ptELwingwall+vDirLn*dispLnEL,
    vAxis=Vector(0,0,-hMaxEL),
    )
Part.show(wwEL,'wwEL')
Part.show(footEL,'footEL')
Part.show(chamferEL,'chamferEL')
